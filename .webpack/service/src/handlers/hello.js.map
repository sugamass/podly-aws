{"version":3,"file":"src/handlers/hello.js","mappings":";;;;;;;;;;;;;AAEO,MAAM,cAAc,GAAG,CAC5B,UAAkB,EAClB,IAAO,EACP,OAAgC,EAChB,EAAE;IAClB,OAAO;QACL,UAAU;QACV,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,GAAG,OAAO;SACX;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B,CAAC;AACJ,CAAC,CAAC;AAbW,sBAAc,kBAazB;AAEK,MAAM,eAAe,GAAG,CAAI,IAAO,EAAkB,EAAE;IAC5D,OAAO,0BAAc,EAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,CAAC,CAAC;AAFW,uBAAe,mBAE1B;AAEK,MAAM,aAAa,GAAG,CAC3B,OAAe,EACf,UAAU,GAAG,GAAG,EACH,EAAE;IACf,OAAO,0BAAc,EAAC,UAAU,EAAE;QAChC,KAAK,EAAE,OAAO;QACd,OAAO;KACR,CAAC,CAAC;AACL,CAAC,CAAC;AARW,qBAAa,iBAQxB;AAEK,MAAM,gBAAgB,GAAG,CAAC,OAAO,GAAG,WAAW,EAAe,EAAE;IACrE,OAAO,0BAAc,EAAC,GAAG,EAAE;QACzB,KAAK,EAAE,WAAW;QAClB,OAAO;KACR,CAAC,CAAC;AACL,CAAC,CAAC;AALW,wBAAgB,oBAK3B;AAEK,MAAM,kBAAkB,GAAG,CAAC,OAAe,EAAe,EAAE;IACjE,OAAO,0BAAc,EAAC,GAAG,EAAE;QACzB,KAAK,EAAE,aAAa;QACpB,OAAO;KACR,CAAC,CAAC;AACL,CAAC,CAAC;AALW,0BAAkB,sBAK7B;;;;;;;UC3CF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;;;;ACjBA,2FAAoD;AAE7C,MAAM,OAAO,GAAG,KAAK,EAC1B,KAA2B,EAC3B,OAAgB,EACgB,EAAE;IAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAE1D,MAAM,OAAO,GAAG;QACd,OAAO,EAAE,0BAA0B;QACnC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK;QACxB,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,UAAU,EAAE,KAAK,CAAC,UAAU;KAC7B,CAAC;IAEF,OAAO,8BAAe,EAAC,OAAO,CAAC,CAAC;AAClC,CAAC,CAAC;AAhBW,eAAO,WAgBlB","sources":["webpack://podly-lambda/./src/utils/response.ts","webpack://podly-lambda/webpack/bootstrap","webpack://podly-lambda/./src/handlers/hello.ts"],"sourcesContent":["import { ApiResponse } from \"../types/api\";\n\nexport const createResponse = <T>(\n  statusCode: number,\n  data: T,\n  headers?: Record<string, string>\n): ApiResponse<T> => {\n  return {\n    statusCode,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers,\n    },\n    body: JSON.stringify(data),\n  };\n};\n\nexport const successResponse = <T>(data: T): ApiResponse<T> => {\n  return createResponse(200, data);\n};\n\nexport const errorResponse = (\n  message: string,\n  statusCode = 500\n): ApiResponse => {\n  return createResponse(statusCode, {\n    error: \"Error\",\n    message,\n  });\n};\n\nexport const notFoundResponse = (message = \"Not Found\"): ApiResponse => {\n  return createResponse(404, {\n    error: \"Not Found\",\n    message,\n  });\n};\n\nexport const badRequestResponse = (message: string): ApiResponse => {\n  return createResponse(400, {\n    error: \"Bad Request\",\n    message,\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {\n  APIGatewayProxyEvent,\n  APIGatewayProxyResult,\n  Context,\n} from \"aws-lambda\";\nimport { successResponse } from \"../utils/response\";\n\nexport const handler = async (\n  event: APIGatewayProxyEvent,\n  context: Context\n): Promise<APIGatewayProxyResult> => {\n  console.log(\"Event:\", JSON.stringify(event, null, 2));\n  console.log(\"Context:\", JSON.stringify(context, null, 2));\n\n  const message = {\n    message: \"Hello from Podly Lambda!\",\n    timestamp: new Date().toISOString(),\n    stage: process.env.STAGE,\n    path: event.path,\n    httpMethod: event.httpMethod,\n  };\n\n  return successResponse(message);\n};\n"],"names":[],"sourceRoot":""}